} # End of the rows For loop
# Changing the Date in Final timeline to a Date format
Final_timeline$Date <- as.Date(Final_timeline$Date)
# Converting all characters to numeric
for(i in c(18,19,22:49)){
Final_timeline[,i] <- as.numeric(Final_timeline[,i])
}
# Creating a consolidated grade
for(i in 1:nrow(Final_timeline)){
Final_timeline$Congrade[i] <- sum(Final_timeline[i,23:49],na.rm=TRUE)
}
Final_timeline$Month <- format(Final_timeline$Date,"%B")
Final_timeline$Month <- factor(Final_timeline$Month,month.name)
# Creating the final data set for all the students
All_Stud_timeline <- rbind(All_Stud_timeline,Final_timeline)
} # End of the file where we iterate over the list of students
i
View(All_Stud_timeline)
paste(Student_school_Association[i,1])
paste(Student_school_Association[(i-1),1])
tempdate
View(temp_grade)
All_Stud_timeline <- data.frame(matrix(nrow=1,ncol=50))
colnames(All_Stud_timeline) <- names(Final_timeline)
for(i in 1:nrow(Student_school_Association)){
tempid <- paste(Student_school_Association[i,1]) # Getting the Id of the student
tempred <- Student_school_Association[i,] # Get all the records for that student
# Data 1 ##  First getting the Discipline data for this student
temp_discipline <- Stud_Disc_InAsc_Master %>% filter(StudentUniqueId==tempid)
if(nrow(temp_discipline) > 0){
tab2 <- Stud_Disc_Act_Master %>% filter(StudentUniqueId==tempid) # Taking the info from the Discipline action data
tab3 <- merge(temp_discipline,Discipline_Indicator_Master,by="IncidentIdentifier",all.x=TRUE) # getting all information
tab3$IncidentDate <- as.Date(as.character(tab3$IncidentDate)) # Converting the date to a charachter object and then making a new date format
tab3$Month <- format(tab3$IncidentDate,"%B") # Making a new variable for Month
tab3$Day <- format(tab3$IncidentDate,"%a") # Making a new variable for day
tab3 <- tab3 %>% select(SchoolName,BehaviorDetailedDescription,IncidentDate)
colnames(tab3)[3] <- "Date"
temp_discipline <- merge(tab3,Discipline_template,by="BehaviorDetailedDescription",all.x=TRUE)
colnames(temp_discipline)[4] <- "Discore"
} # If condition for checking whether there are any discipline data for the considered student
# Data 2 ## Getting the Attendence data like the discipline data
temp_attendence <- attend_trans %>% filter(StudentUniqueStateId==tempid) # Not a single incidence of absenteeism
# Take only relevant columns in temp_attendence
temp_attendence <- temp_attendence %>% select(StudentUniqueStateId,AttendanceEventReason,StateOrganizationId,LocalCourseCode,ClassPeriodName,Location,Date,Month,Day,Week,reasons,counts,HispanicLatinoEthnicity,Race,EconomicDisadvantaged,SchoolFoodServicesEligibility,normrace,normpop)
# Data 3 ## Getting the grade information of the particular student
temp_grade <- stud_grade %>% filter(ns1.StudentUniqueStateId==tempid)
# Data 4 ## Getting the temp timeline
temp_timeline <- samp_dates
colnames(temp_timeline)[1] <- "Date" # Renaming the temp_timeline date column
# Data Merge 1 # Attendence data Merge
if(nrow(temp_attendence) > 0){
temp_timeline <- merge(temp_timeline,temp_attendence,by="Date",all=TRUE) # merged all records of attendence
}else {
temp_timeline[,3:19] <- NA
colnames(temp_timeline)[3:19] <- c("StudentUniqueStateId","AttendanceEventReason","StateOrganizationId","LocalCourseCode","ClassPeriodName","Location","Month","Day","Week","reasons","counts","HispanicLatinoEthnicity","Race","EconomicDisadvantaged","SchoolFoodServicesEligibility","normrace","normpop")
} # End of If loop for temp_attendence merge
# JMJPFU
# 20-Sept-2016
# Data Merge 2 - Discipline data
# Cleaning up the discipline data
if(nrow(temp_discipline) > 0) {
# Merging the data sets
temp_timeline <- merge(temp_timeline,temp_discipline,by="Date",all=TRUE)
}else{
temp_timeline[,19:22] <- NA
colnames(temp_timeline)[20:22] <- c("BehaviorDetailedDescription","SchoolName","Discore" )
} # End of the If loop for discipline merge
# Data Merge 3 - Getting the grade data
# Getting the basic dates
grad_dates <- data.frame(Dates=c("2015-10-13","2015-11-10","2015-12-16","2016-02-04","2016-03-07","2016-04-07","2016-06-10"))
grad_dates[,2:28] <- NA # Defining the rest 27 variables pertaining to grades
colnames(grad_dates)[1] <- "Date"
colnames(grad_dates)[2:28] <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","23","26","28","29","RA", "RB","EA","EB","MA","MB","AS","BS","SA","SB")
# Calling the function to fix the grade details
if(nrow(temp_grade) > 0){
samp_grade <- get_grade(temp_grade,grad_dates) # Getting all the grade information in samp_grade
}else{samp_grade <- grad_dates }
# Merging the grade info with the temp_timline
temp_timeline <- merge(temp_timeline,samp_grade,by="Date",all=TRUE)
# Data Operation 3 - Cleaning up all the merged data and creating a final data frame
Final_timeline <- data.frame(matrix(nrow=1,ncol=49))
colnames(Final_timeline) <- names(temp_timeline)
# Now to eliminate all those rows where there is no data.
cou = 0
for(i in 1:nrow(temp_timeline)){
for(j in 3:49){
if(!is.na(temp_timeline[i,j])){
cou = cou+1
for(k in 1:49){
Final_timeline[cou,k] <- paste(temp_timeline[i,k])
}
break
} # End of the if loop
} # End of the columns for loop
} # End of the rows For loop
# Changing the Date in Final timeline to a Date format
Final_timeline$Date <- as.Date(Final_timeline$Date)
# Converting all characters to numeric
for(i in c(18,19,22:49)){
Final_timeline[,i] <- as.numeric(Final_timeline[,i])
}
# Creating a consolidated grade
for(i in 1:nrow(Final_timeline)){
Final_timeline$Congrade[i] <- sum(Final_timeline[i,23:49],na.rm=TRUE)
}
Final_timeline$Month <- format(Final_timeline$Date,"%B")
Final_timeline$Month <- factor(Final_timeline$Month,month.name)
# Creating the final data set for all the students
All_Stud_timeline <- rbind(All_Stud_timeline,Final_timeline)
} # End of the file where we iterate over the list of students
View(All_Stud_timeline)
length(unique(All_Stud_timeline$StudentUniqueStateId))
View(All_Stud_timeline)
View(Student_school_Association)
length(unique(Student_school_Association$StudentUniqueStateId))
length(unique(All_Stud_timeline$StudentUniqueStateId))
All_Stud_timeline$Datenew <- as.Date(All_Stud_timeline$Date,origin="1970-01-01")
View(Stud_Disc_Act_Master)
Stud_Disc_Act_Master %>% filter(StudentUniqueId=="7760092758"& DisciplineDate == "2015-09-03" )
library(dplyr)
Stud_Disc_Act_Master %>% filter(StudentUniqueId=="7760092758"& DisciplineDate == "2015-09-03" )
Stud_Disc_Act_Master %>% filter(StudentUniqueId=="7760092758"& DisciplineDate == 2015-09-03 )
Stud_Disc_Act_Master %>% filter(StudentUniqueId=="7760092758" )
View(Stud_Disc_InAsc_Master)
View(Stud_Disc_Act_Master)
Stud_Disc_Act_Master %>% filter(StudentUniqueId==7760092758 )
View(attend_transformed)
View(attend_trans)
attend_trans %>% filter(StudentUniqueStateId=="7760092758"& Date == 2015-09-03)
attend_trans %>% filter(StudentUniqueStateId=="7760092758")
attend_trans %>% filter(StudentUniqueStateId=="7760092758"& Date == "2015-09-03")
attend_trans %>% filter(StudentUniqueStateId=="7760092758"& Date == "2015-09-09")
All_Stud_backup <- All_Stud_timeline
All_Stud_timeline <- All_Stud_timeline[2:679484,]
i=1
paste(All_Stud_timeline$StudentUniqueStateId[i])
for(i in 1:nrow(All_Stud_timeline)){
tempid <- paste(All_Stud_timeline$StudentUniqueStateId[i])
if(is.na(tempid)){All_Stud_timeline$StudentUniqueStateId[i] <- All_Stud_timeline$StudentUniqueStateId[(i+1)]  }
}
i=15
paste(All_Stud_timeline$StudentUniqueStateId[i])
i=1
tempid <- paste(Student_school_Association[i,1]) # Getting the Id of the student
Student_school_Association[i,]
temp_discipline <- Stud_Disc_InAsc_Master %>% filter(StudentUniqueId==tempid)
i=5
tempid <- paste(Student_school_Association[i,1]) # Getting the Id of the student
temp_discipline <- Stud_Disc_InAsc_Master %>% filter(StudentUniqueId==tempid)
View(temp_discipline)
temp_attendence <- attend_trans %>% filter(StudentUniqueStateId==tempid) # Not a single incidence of absenteeism
View(temp_attendence)
temp_grade <- stud_grade %>% filter(ns1.StudentUniqueStateId==tempid)
View(temp_grade)
temp_attendence <- temp_attendence %>% select(StudentUniqueStateId,Date)
i=1
tab2 <- Stud_Disc_Act_Master %>% filter(StudentUniqueId==tempid) # Taking the info from the Discipline action data
View(tab2)
tab3 <- merge(temp_discipline,Discipline_Indicator_Master,by="IncidentIdentifier",all.x=TRUE) # getting all information
View(tab3)
tab3$IncidentDate <- as.Date(as.character(tab3$IncidentDate)) # Converting the date to a charachter object and then making a new date format
tab3 <- tab3 %>% select(SchoolName,BehaviorDetailedDescription,IncidentDate)
colnames(tab3)[3] <- "Date"
temp_discipline <- merge(tab3,Discipline_template,by="BehaviorDetailedDescription",all.x=TRUE)
colnames(temp_discipline)[4] <- "Discore"
samp_grade <- data.frame(Dates=c("2015-10-13","2015-11-10","2015-12-16","2016-02-04","2016-03-07","2016-04-07","2016-06-10"))
colnames(samp_grade)[1] <- "Date"
samp_grade$StudID <- paste(temp_grade$ns1.StudentUniqueStateId[1])
View(samp_grade)
All_Stud_IDs <- data.frame(matrix(nrow=0,ncol=10))
i=1
tempid <- paste(Student_school_Association[i,1]) # Getting the Id of the student
tempred <- Student_school_Association[i,] # Get all the records for that student
temp_discipline <- Stud_Disc_InAsc_Master %>% filter(StudentUniqueId==tempid) %>% select(IncidentIdentifier,StudentUniqueId)
View(temp_discipline)
temp_attendence <- attend_trans %>% filter(StudentUniqueStateId==tempid) # Not a single incidence of absenteeism
temp_attendence <- temp_attendence %>% select(StudentUniqueStateId,Date)
temp_grade <- stud_grade %>% filter(ns1.StudentUniqueStateId==tempid)
temp_timeline <- samp_dates
colnames(temp_timeline)[1] <- "Date" # Renaming the temp_timeline date column
temp_timeline <- merge(temp_timeline,temp_attendence,by="Date",all=TRUE) # merged all records of attendence
View(temp_timeline)
temp_timeline[,4:7] <- NA
colnames(temp_timeline)[5:7] <- c("BehaviorDetailedDescription","SchoolName","Discore" )
temp_timeline[,4:6] <- NA
colnames(temp_timeline)[4:6] <- c("BehaviorDetailedDescription","SchoolName","Discore" )
View(temp_grade)
grad_dates <- data.frame(Dates=c("2015-10-13","2015-11-10","2015-12-16","2016-02-04","2016-03-07","2016-04-07","2016-06-10"))
grad_dates[,2:28] <- NA # Defining the rest 27 variables pertaining to grades
colnames(grad_dates)[1] <- "Date"
View(grad_dates)
samp_grade <- get_grade(temp_grade,grad_dates) # Getting all the grade information in samp_grade
View(samp_grade)
temp_timeline <- merge(temp_timeline,samp_grade,by="Date",all=TRUE)
temp_timeline[,6] <- NULL
samp_grade$Studid <- paste(temp_grade$ns1.StudentUniqueStateId[1])
temp_timeline <- samp_dates
colnames(temp_timeline)[1] <- "Date" # Renaming the temp_timeline date column
temp_timeline <- merge(temp_timeline,temp_attendence,by="Date",all=TRUE) # merged all records of attendence
temp_timeline[,4:6] <- NA
colnames(temp_timeline)[4:6] <- c("BehaviorDetailedDescription","SchoolName","Discore" )
grad_dates <- data.frame(Dates=c("2015-10-13","2015-11-10","2015-12-16","2016-02-04","2016-03-07","2016-04-07","2016-06-10"))
grad_dates[,2:28] <- NA # Defining the rest 27 variables pertaining to grades
colnames(grad_dates)[1] <- "Date"
colnames(grad_dates)[2:28] <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","23","26","28","29","RA", "RB","EA","EB","MA","MB","AS","BS","SA","SB")
tempid
samp_grade <- get_grade(temp_grade,grad_dates) # Getting all the grade information in samp_grade
samp_grade$Studid <- paste(temp_grade$ns1.StudentUniqueStateId[1])
temp_timeline <- merge(temp_timeline,samp_grade,by="Date",all=TRUE)
Final_timeline <- data.frame(matrix(nrow=1,ncol=34))
colnames(Final_timeline) <- names(temp_timeline)
Final_timeline <- data.frame(matrix(nrow=0,ncol=34))
colnames(Final_timeline) <- names(temp_timeline)
View(Final_timeline)
samp_grade$Studid <- NA
View(Final_timeline)
All_Stud_IDs <- data.frame(matrix(nrow=0,ncol=34))
colnames(All_Stud_IDs) <- names(Final_timeline)
View(All_Stud_IDs)
for(i in 1:nrow(Student_school_Association)){
tempid <- paste(Student_school_Association[i,1]) # Getting the Id of the student
tempred <- Student_school_Association[i,] # Get all the records for that student
# Data 1 ##  First getting the Discipline data for this student
temp_discipline <- Stud_Disc_InAsc_Master %>% filter(StudentUniqueId==tempid) %>% select(IncidentIdentifier,StudentUniqueId)
if(nrow(temp_discipline) > 0){
tab2 <- Stud_Disc_Act_Master %>% filter(StudentUniqueId==tempid) # Taking the info from the Discipline action data
tab3 <- merge(temp_discipline,Discipline_Indicator_Master,by="IncidentIdentifier",all.x=TRUE) # getting all information
tab3$IncidentDate <- as.Date(as.character(tab3$IncidentDate)) # Converting the date to a charachter object and then making a new date format
tab3 <- tab3 %>% select(SchoolName,BehaviorDetailedDescription,IncidentDate)
colnames(tab3)[3] <- "Date"
temp_discipline <- merge(tab3,Discipline_template,by="BehaviorDetailedDescription",all.x=TRUE)
colnames(temp_discipline)[4] <- "Discore"
} # If condition for checking whether there are any discipline data for the considered student
# Data 2 ## Getting the Attendence data like the discipline data
temp_attendence <- attend_trans %>% filter(StudentUniqueStateId==tempid) # Not a single incidence of absenteeism
# Take only relevant columns in temp_attendence
temp_attendence <- temp_attendence %>% select(StudentUniqueStateId,Date)
# Data 3 ## Getting the grade information of the particular student
temp_grade <- stud_grade %>% filter(ns1.StudentUniqueStateId==tempid)
# Data 4 ## Getting the temp timeline
temp_timeline <- samp_dates
colnames(temp_timeline)[1] <- "Date" # Renaming the temp_timeline date column
# Data Merge 1 # Attendence data Merge
if(nrow(temp_attendence) > 0){
temp_timeline <- merge(temp_timeline,temp_attendence,by="Date",all=TRUE) # merged all records of attendence
}else {
temp_timeline[,3] <- NA
colnames(temp_timeline)[3] <- c("StudentUniqueStateId")
} # End of If loop for temp_attendence merge
# JMJPFU
# 20-Sept-2016
# Data Merge 2 - Discipline data
# Cleaning up the discipline data
if(nrow(temp_discipline) > 0) {
# Merging the data sets
temp_timeline <- merge(temp_timeline,temp_discipline,by="Date",all=TRUE)
}else{
temp_timeline[,4:6] <- NA
colnames(temp_timeline)[4:6] <- c("BehaviorDetailedDescription","SchoolName","Discore" )
} # End of the If loop for discipline merge
# Data Merge 3 - Getting the grade data
# Getting the basic dates
grad_dates <- data.frame(Dates=c("2015-10-13","2015-11-10","2015-12-16","2016-02-04","2016-03-07","2016-04-07","2016-06-10"))
grad_dates[,2:28] <- NA # Defining the rest 27 variables pertaining to grades
colnames(grad_dates)[1] <- "Date"
colnames(grad_dates)[2:28] <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","23","26","28","29","RA", "RB","EA","EB","MA","MB","AS","BS","SA","SB")
# Calling the function to fix the grade details
if(nrow(temp_grade) > 0){
samp_grade <- get_grade(temp_grade,grad_dates) # Getting all the grade information in samp_grade
samp_grade$Studid <- paste(temp_grade$ns1.StudentUniqueStateId[1])
}else{
samp_grade <- grad_dates
samp_grade$Studid <- NA
}
# Merging the grade info with the temp_timline
temp_timeline <- merge(temp_timeline,samp_grade,by="Date",all=TRUE)
# Data Operation 3 - Cleaning up all the merged data and creating a final data frame
Final_timeline <- data.frame(matrix(nrow=0,ncol=34))
colnames(Final_timeline) <- names(temp_timeline)
# Now to eliminate all those rows where there is no data.
cou = 0
for(i in 1:nrow(temp_timeline)){
for(j in 3:33){
if(!is.na(temp_timeline[i,j])){
cou = cou+1
for(k in 1:34){
Final_timeline[cou,k] <- paste(temp_timeline[i,k])
}
break
} # End of the if loop
} # End of the columns for loop
} # End of the rows For loop
# Changing the Date in Final timeline to a Date format
Final_timeline$Date <- as.Date(Final_timeline$Date)
# Creating the final data set for all the students
All_Stud_IDs <- rbind(All_Stud_IDs,Final_timeline)
} # End of the file where we iterate over the list of students
tempid
temp_discipline <- Stud_Disc_InAsc_Master %>% filter(StudentUniqueId==tempid) %>% select(IncidentIdentifier,StudentUniqueId)
tab2 <- Stud_Disc_Act_Master %>% filter(StudentUniqueId==tempid) # Taking the info from the Discipline action data
tab3 <- merge(temp_discipline,Discipline_Indicator_Master,by="IncidentIdentifier",all.x=TRUE) # getting all information
View(tab3)
tab3 <- tab3 %>% select(BehaviorDetailedDescription,IncidentDate)
temp_discipline <- Stud_Disc_InAsc_Master %>% filter(StudentUniqueId==tempid)
View(temp_discipline)
tab2 <- Stud_Disc_Act_Master %>% filter(StudentUniqueId==tempid) # Taking the info from the Discipline action data
tab3 <- merge(temp_discipline,Discipline_Indicator_Master,by="IncidentIdentifier",all.x=TRUE) # getting all information
tab3$IncidentDate <- as.Date(as.character(tab3$IncidentDate)) # Converting the date to a charachter object and then making a new date format
temp_discipline <- Stud_Disc_InAsc_Master %>% filter(StudentUniqueId==tempid)
tab2 <- Stud_Disc_Act_Master %>% filter(StudentUniqueId==tempid) # Taking the info from the Discipline action data
tab3 <- merge(temp_discipline,Discipline_Indicator_Master,by="IncidentIdentifier",all.x=TRUE) # getting all information
tab3$IncidentDate <- as.Date(as.character(tab3$IncidentDate)) # Converting the date to a charachter object and then making a new date format
tab3 <- tab3 %>% select(BehaviorDetailedDescription,IncidentDate)
tab2 <- Stud_Disc_Act_Master %>% filter(StudentUniqueId==tempid) # Taking the info from the Discipline action data
tab3 <- merge(temp_discipline,Discipline_Indicator_Master,by="IncidentIdentifier",all.x=TRUE) # getting all information
tab3$IncidentDate <- as.Date(as.character(tab3$IncidentDate)) # Converting the date to a charachter object and then making a new date format
tab3 <- tab3 %>% select(BehaviorDetailedDescription,IncidentDate)
colnames(tab3)[2] <- "Date"
temp_discipline <- merge(tab3,Discipline_template,by="BehaviorDetailedDescription",all.x=TRUE)
View(temp_discipline)
colnames(temp_discipline)[3] <- "Discore"
temp_discipline <- Stud_Disc_InAsc_Master %>% filter(StudentUniqueId==tempid)
tab2 <- Stud_Disc_Act_Master %>% filter(StudentUniqueId==tempid) # Taking the info from the Discipline action data
tab3 <- merge(temp_discipline,Discipline_Indicator_Master,by="IncidentIdentifier",all.x=TRUE) # getting all information
tab3$IncidentDate <- as.Date(as.character(tab3$IncidentDate)) # Converting the date to a charachter object and then making a new date format
tab3 <- tab3 %>% select(BehaviorDetailedDescription,IncidentDate)
colnames(tab3)[2] <- "Date"
temp_discipline <- merge(tab3,Discipline_template,by="BehaviorDetailedDescription",all.x=TRUE)
colnames(temp_discipline)[3] <- "Discore"
temp_timeline <- samp_dates
colnames(temp_timeline)[1] <- "Date" # Renaming the temp_timeline date column
View(temp_attendence)
temp_timeline <- merge(temp_timeline,temp_attendence,by="Date",all=TRUE) # merged all records of attendence
temp_timeline <- merge(temp_timeline,temp_discipline,by="Date",all=TRUE)
grad_dates <- data.frame(Dates=c("2015-10-13","2015-11-10","2015-12-16","2016-02-04","2016-03-07","2016-04-07","2016-06-10"))
grad_dates[,2:28] <- NA # Defining the rest 27 variables pertaining to grades
colnames(grad_dates)[1] <- "Date"
colnames(grad_dates)[2:28] <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","23","26","28","29","RA", "RB","EA","EB","MA","MB","AS","BS","SA","SB")
samp_grade <- get_grade(temp_grade,grad_dates) # Getting all the grade information in samp_grade
samp_grade$Studid <- paste(temp_grade$ns1.StudentUniqueStateId[1])
temp_timeline <- merge(temp_timeline,samp_grade,by="Date",all=TRUE)
Final_timeline <- data.frame(matrix(nrow=0,ncol=33))
colnames(Final_timeline) <- names(temp_timeline)
All_Stud_IDs <- data.frame(matrix(nrow=0,ncol=33))
colnames(All_Stud_IDs) <- names(Final_timeline)
View(All_Stud_IDs)
for(i in 1:nrow(Student_school_Association)){
tempid <- paste(Student_school_Association[i,1]) # Getting the Id of the student
tempred <- Student_school_Association[i,] # Get all the records for that student
# Data 1 ##  First getting the Discipline data for this student
temp_discipline <- Stud_Disc_InAsc_Master %>% filter(StudentUniqueId==tempid)
if(nrow(temp_discipline) > 0){
tab2 <- Stud_Disc_Act_Master %>% filter(StudentUniqueId==tempid) # Taking the info from the Discipline action data
tab3 <- merge(temp_discipline,Discipline_Indicator_Master,by="IncidentIdentifier",all.x=TRUE) # getting all information
tab3$IncidentDate <- as.Date(as.character(tab3$IncidentDate)) # Converting the date to a charachter object and then making a new date format
tab3 <- tab3 %>% select(BehaviorDetailedDescription,IncidentDate)
colnames(tab3)[2] <- "Date"
temp_discipline <- merge(tab3,Discipline_template,by="BehaviorDetailedDescription",all.x=TRUE)
colnames(temp_discipline)[3] <- "Discore"
} # If condition for checking whether there are any discipline data for the considered student
# Data 2 ## Getting the Attendence data like the discipline data
temp_attendence <- attend_trans %>% filter(StudentUniqueStateId==tempid) # Not a single incidence of absenteeism
# Take only relevant columns in temp_attendence
temp_attendence <- temp_attendence %>% select(StudentUniqueStateId,Date)
# Data 3 ## Getting the grade information of the particular student
temp_grade <- stud_grade %>% filter(ns1.StudentUniqueStateId==tempid)
# Data 4 ## Getting the temp timeline
temp_timeline <- samp_dates
colnames(temp_timeline)[1] <- "Date" # Renaming the temp_timeline date column
# Data Merge 1 # Attendence data Merge
if(nrow(temp_attendence) > 0){
temp_timeline <- merge(temp_timeline,temp_attendence,by="Date",all=TRUE) # merged all records of attendence
}else {
temp_timeline[,3] <- NA
colnames(temp_timeline)[3] <- c("StudentUniqueStateId")
} # End of If loop for temp_attendence merge
# JMJPFU
# 20-Sept-2016
# Data Merge 2 - Discipline data
# Cleaning up the discipline data
if(nrow(temp_discipline) > 0) {
# Merging the data sets
temp_timeline <- merge(temp_timeline,temp_discipline,by="Date",all=TRUE)
}else{
temp_timeline[,4:5] <- NA
colnames(temp_timeline)[4:5] <- c("BehaviorDetailedDescription","Discore" )
} # End of the If loop for discipline merge
# Data Merge 3 - Getting the grade data
# Getting the basic dates
grad_dates <- data.frame(Dates=c("2015-10-13","2015-11-10","2015-12-16","2016-02-04","2016-03-07","2016-04-07","2016-06-10"))
grad_dates[,2:28] <- NA # Defining the rest 27 variables pertaining to grades
colnames(grad_dates)[1] <- "Date"
colnames(grad_dates)[2:28] <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","23","26","28","29","RA", "RB","EA","EB","MA","MB","AS","BS","SA","SB")
# Calling the function to fix the grade details
if(nrow(temp_grade) > 0){
samp_grade <- get_grade(temp_grade,grad_dates) # Getting all the grade information in samp_grade
samp_grade$Studid <- paste(temp_grade$ns1.StudentUniqueStateId[1])
}else{
samp_grade <- grad_dates
samp_grade$Studid <- NA
}
# Merging the grade info with the temp_timline
temp_timeline <- merge(temp_timeline,samp_grade,by="Date",all=TRUE)
# Data Operation 3 - Cleaning up all the merged data and creating a final data frame
Final_timeline <- data.frame(matrix(nrow=0,ncol=33))
colnames(Final_timeline) <- names(temp_timeline)
# Now to eliminate all those rows where there is no data.
cou = 0
for(i in 1:nrow(temp_timeline)){
for(j in 3:32){
if(!is.na(temp_timeline[i,j])){
cou = cou+1
for(k in 1:33){
Final_timeline[cou,k] <- paste(temp_timeline[i,k])
}
break
} # End of the if loop
} # End of the columns for loop
} # End of the rows For loop
# Changing the Date in Final timeline to a Date format
Final_timeline$Date <- as.Date(Final_timeline$Date)
# Creating the final data set for all the students
All_Stud_IDs <- rbind(All_Stud_IDs,Final_timeline)
} # End of the file where we iterate over the list of students
samp_grade <- get_grade(temp_grade,grad_dates) # Getting all the grade information in samp_grade
View(samp_grade)
All_Stud_IDs <- data.frame(matrix(nrow=0,ncol=33))
colnames(All_Stud_IDs) <- names(Final_timeline)
View(All_Stud_IDs)
for(i in 1:nrow(Student_school_Association)){
tempid <- paste(Student_school_Association[i,1]) # Getting the Id of the student
tempred <- Student_school_Association[i,] # Get all the records for that student
# Data 1 ##  First getting the Discipline data for this student
temp_discipline <- Stud_Disc_InAsc_Master %>% filter(StudentUniqueId==tempid)
if(nrow(temp_discipline) > 0){
tab2 <- Stud_Disc_Act_Master %>% filter(StudentUniqueId==tempid) # Taking the info from the Discipline action data
tab3 <- merge(temp_discipline,Discipline_Indicator_Master,by="IncidentIdentifier",all.x=TRUE) # getting all information
tab3$IncidentDate <- as.Date(as.character(tab3$IncidentDate)) # Converting the date to a charachter object and then making a new date format
tab3 <- tab3 %>% select(BehaviorDetailedDescription,IncidentDate)
colnames(tab3)[2] <- "Date"
temp_discipline <- merge(tab3,Discipline_template,by="BehaviorDetailedDescription",all.x=TRUE)
colnames(temp_discipline)[3] <- "Discore"
} # If condition for checking whether there are any discipline data for the considered student
# Data 2 ## Getting the Attendence data like the discipline data
temp_attendence <- attend_trans %>% filter(StudentUniqueStateId==tempid) # Not a single incidence of absenteeism
# Take only relevant columns in temp_attendence
temp_attendence <- temp_attendence %>% select(StudentUniqueStateId,Date)
# Data 3 ## Getting the grade information of the particular student
temp_grade <- stud_grade %>% filter(ns1.StudentUniqueStateId==tempid)
# Data 4 ## Getting the temp timeline
temp_timeline <- samp_dates
colnames(temp_timeline)[1] <- "Date" # Renaming the temp_timeline date column
# Data Merge 1 # Attendence data Merge
if(nrow(temp_attendence) > 0){
temp_timeline <- merge(temp_timeline,temp_attendence,by="Date",all=TRUE) # merged all records of attendence
}else {
temp_timeline[,3] <- NA
colnames(temp_timeline)[3] <- c("StudentUniqueStateId")
} # End of If loop for temp_attendence merge
# JMJPFU
# 20-Sept-2016
# Data Merge 2 - Discipline data
# Cleaning up the discipline data
if(nrow(temp_discipline) > 0) {
# Merging the data sets
temp_timeline <- merge(temp_timeline,temp_discipline,by="Date",all=TRUE)
}else{
temp_timeline[,4:5] <- NA
colnames(temp_timeline)[4:5] <- c("BehaviorDetailedDescription","Discore" )
} # End of the If loop for discipline merge
# Data Merge 3 - Getting the grade data
# Getting the basic dates
grad_dates <- data.frame(Dates=c("2015-10-13","2015-11-10","2015-12-16","2016-02-04","2016-03-07","2016-04-07","2016-06-10"))
grad_dates[,2:28] <- NA # Defining the rest 27 variables pertaining to grades
colnames(grad_dates)[1] <- "Date"
colnames(grad_dates)[2:28] <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","23","26","28","29","RA", "RB","EA","EB","MA","MB","AS","BS","SA","SB")
# Calling the function to fix the grade details
if(nrow(temp_grade) > 0){
samp_grade <- get_grade(temp_grade,grad_dates) # Getting all the grade information in samp_grade
samp_grade$Studid <- paste(temp_grade$ns1.StudentUniqueStateId[1])
}else{
samp_grade <- grad_dates
samp_grade$Studid <- NA
}
# Merging the grade info with the temp_timline
temp_timeline <- merge(temp_timeline,samp_grade,by="Date",all=TRUE)
# Data Operation 3 - Cleaning up all the merged data and creating a final data frame
Final_timeline <- data.frame(matrix(nrow=0,ncol=33))
colnames(Final_timeline) <- names(temp_timeline)
# Now to eliminate all those rows where there is no data.
cou = 0
for(i in 1:nrow(temp_timeline)){
for(j in 3:32){
if(!is.na(temp_timeline[i,j])){
cou = cou+1
for(k in 1:33){
Final_timeline[cou,k] <- paste(temp_timeline[i,k])
}
break
} # End of the if loop
} # End of the columns for loop
} # End of the rows For loop
# Changing the Date in Final timeline to a Date format
Final_timeline$Date <- as.Date(Final_timeline$Date)
# Creating the final data set for all the students
All_Stud_IDs <- rbind(All_Stud_IDs,Final_timeline)
} # End of the file where we iterate over the list of students
View(All_Stud_backup)
View(Discipline_template)
View(All_Stud_IDs)
679483-679359
getwd()
